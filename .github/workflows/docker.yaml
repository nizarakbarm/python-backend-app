name: dockerCD

on:
    pull_request:
        types: [opened, reopened]
        branches:
        - develop
        - 'feature/**'

permissions:
  contents: read
        
jobs:
    hadolint:
     permissions:
        contents: write
        issues: write
        pull-requests: write
     runs-on: ubuntu-latest
     steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Run Docker linting using Hadolint
        id: hadolint
        uses: hadolint/hadolint-action@v3.1.0
        with: 
         failure-threshold: warning
      - name: Update Pull Request
        uses: actions/github-script@v6
        if: github.event_name == 'pull_request'
        with:
            script: |
                const output = `
                #### Hadolint: \`${{ steps.hadolint.outcome }}\`
                \`\`\`
                ${process.env.HADOLINT_RESULTS}
                \`\`\`
                `;
        
                github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: output
                })
    dockle:
      runs-on: ubuntu-latest
      steps:
        - name: Checkout
          uses: actions/checkout@v4
        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v3
        - name: Build docker image
          uses: docker/build-push-action@v5
          with:
            context: .
            file: ./Dockerfile
            push: false
            tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}:${{ github.ref_name }}
        - name: Run dockle
          uses: goodwithtech/dockle-action@v0.1.2
          with:
            image: ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}:${{ github.ref_name }}
            format: 'list'
            exit-code: '1'
            exit-level: 'warn'

    build:
        runs-on: ubuntu-latest
        needs: [hadolint, dockle]
        steps:
         - name: Checkout
           uses: actions/checkout@v4
         - name: Login to Docker Hub
           uses: docker/login-action@v3
           with:
             username: ${{ secrets.DOCKERHUB_USERNAME }}
             password: ${{ secrets.DOCKERHUB_TOKEN }}
         - name: Set up Docker Buildx
           uses: docker/setup-buildx-action@v3
         - name: Build and push
           uses: docker/build-push-action@v5
           with:
            context: .
            file: ./Dockerfile
            push: true
            tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}